{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Qss\\\\Desktop\\\\BEST\\\\Nowe\\\\Project\\\\app\\\\app\\\\src\\\\DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DataFetching() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [randomPost, setRandomPost] = useState([null]);\n  const url = \"https://jsonplaceholder.typicode.com/posts\";\n  useEffect(_ref => {\n    let [] = _ref;\n    fetch(url).then(res => {\n      if (!res.ok) {\n        return Error(\"Error!\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setPosts(data);\n      const randomId = Math.round(Math.random() * posts.length);\n      setRandomPost(data[randomId]);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const randomPostId = Math.round(Math.random() * posts.length);\n        setRandomPost(posts[randomPostId]);\n      },\n      children: \"Get random post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), randomPost && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [randomPost.title, randomPost.body]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n/*\r\n    const [posts, setPosts] = useState([]);\r\n    const [randomPost, setRandomPost] = useState(null)\r\n\r\n    useEffect(() => {    \r\n        fetch('http://jsonplaceholder.typicode.com/users/1/posts')\r\n            .then(res => res.json())\r\n            .then(data => setPosts(data.posts));\r\n    }, []);\r\n\r\n    return (\r\n    <div className=\"post\">\r\n        <>\r\n        <button\r\n          onClick={() => {\r\n            const randomId = Math.round(Math.random())\r\n            setRandomPost(posts[randomId])\r\n            console.log(randomId)\r\n          }}\r\n        >\r\n          Get random post\r\n        </button>\r\n        {randomPost && (\r\n          <>\r\n            {randomPost.title}\r\n            {randomPost.body}\r\n          </>\r\n        )}\r\n        {/* {Post?.map(post => (\r\n        <ul>\r\n            <li key={post.id}>\r\n                <h3>{post.title}</h3>\r\n                <p>{post.body}</p>\r\n            </li>\r\n        </ul>\r\n        ))} }\r\n        </>\r\n    </div>\r\n    )\r\n}*/\n\n_s(DataFetching, \"tweWtEuSncAZaFZqW2p7y/R5r/o=\");\n\n_c = DataFetching;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataFetching\");","map":{"version":3,"names":["useState","useEffect","DataFetching","posts","setPosts","randomPost","setRandomPost","url","fetch","then","res","ok","Error","json","data","randomId","Math","round","random","length","randomPostId","title","body"],"sources":["C:/Users/Qss/Desktop/BEST/Nowe/Project/app/app/src/DataFetching.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport \"./style.css\";\r\n\r\n\r\nexport default function DataFetching() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [randomPost, setRandomPost] = useState([null]);\r\n\r\n  const url = \"https://jsonplaceholder.typicode.com/posts\";\r\n\r\n  useEffect(([]) => {\r\n    fetch(url)\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          return Error(\"Error!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setPosts(data)\r\n        const randomId = Math.round(Math.random() * posts.length)\r\n        setRandomPost(data[randomId])\r\n      });\r\n  });\r\n\r\n  return (\r\n    <div className=\"post\">   \r\n      <button\r\n          onClick={() => {\r\n            const randomPostId = Math.round(Math.random() * posts.length)\r\n            setRandomPost(posts[randomPostId])\r\n          }}\r\n        >\r\n          Get random post\r\n        </button>\r\n        {randomPost && (\r\n          <>\r\n            {randomPost.title}\r\n            {randomPost.body}\r\n          </>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n/*\r\n    const [posts, setPosts] = useState([]);\r\n    const [randomPost, setRandomPost] = useState(null)\r\n\r\n    useEffect(() => {    \r\n        fetch('http://jsonplaceholder.typicode.com/users/1/posts')\r\n            .then(res => res.json())\r\n            .then(data => setPosts(data.posts));\r\n    }, []);\r\n\r\n    return (\r\n    <div className=\"post\">\r\n        <>\r\n        <button\r\n          onClick={() => {\r\n            const randomId = Math.round(Math.random())\r\n            setRandomPost(posts[randomId])\r\n            console.log(randomId)\r\n          }}\r\n        >\r\n          Get random post\r\n        </button>\r\n        {randomPost && (\r\n          <>\r\n            {randomPost.title}\r\n            {randomPost.body}\r\n          </>\r\n        )}\r\n        {/* {Post?.map(post => (\r\n        <ul>\r\n            <li key={post.id}>\r\n                <h3>{post.title}</h3>\r\n                <p>{post.body}</p>\r\n            </li>\r\n        </ul>\r\n        ))} }\r\n        </>\r\n    </div>\r\n    )\r\n}*/"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,aAAP;;;AAGA,eAAe,SAASC,YAAT,GAAwB;EAAA;;EACrC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAC,IAAD,CAAD,CAA5C;EAEA,MAAMO,GAAG,GAAG,4CAAZ;EAEAN,SAAS,CAAC,QAAQ;IAAA,IAAP,EAAO;IAChBO,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,GAAG,IAAI;MACX,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;QACX,OAAOC,KAAK,CAAC,QAAD,CAAZ;MACD;;MACD,OAAOF,GAAG,CAACG,IAAJ,EAAP;IACD,CANH,EAOGJ,IAPH,CAOQK,IAAI,IAAI;MACZV,QAAQ,CAACU,IAAD,CAAR;MACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBf,KAAK,CAACgB,MAAjC,CAAjB;MACAb,aAAa,CAACQ,IAAI,CAACC,QAAD,CAAL,CAAb;IACD,CAXH;EAYD,CAbQ,CAAT;EAeA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MACI,OAAO,EAAE,MAAM;QACb,MAAMK,YAAY,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBf,KAAK,CAACgB,MAAjC,CAArB;QACAb,aAAa,CAACH,KAAK,CAACiB,YAAD,CAAN,CAAb;MACD,CAJL;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EASKf,UAAU,iBACT;MAAA,WACGA,UAAU,CAACgB,KADd,EAEGhB,UAAU,CAACiB,IAFd;IAAA,gBAVN;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA/EwBpB,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}