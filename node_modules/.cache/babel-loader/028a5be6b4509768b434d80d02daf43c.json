{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Qss\\\\Desktop\\\\BEST\\\\Nowe\\\\Project\\\\app\\\\app\\\\src\\\\pages\\\\AddNotice.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddNotice() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return (\n    /*#__PURE__*/\n\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: \"test\",\n        ...register(\"example\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"exampleRequired\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  );\n}\n\n_s(AddNotice, \"77WzwRY2adCYNFA0cLnNubMUW6o=\", false, function () {\n  return [useForm];\n});\n\n_c = AddNotice;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNotice\");","map":{"version":3,"names":["React","useForm","AddNotice","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","required","exampleRequired"],"sources":["C:/Users/Qss/Desktop/BEST/Nowe/Project/app/app/src/pages/AddNotice.js"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport '../style.css'\r\n\r\nexport default function AddNotice() {\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n    const onSubmit = data => console.log(data);\r\n  \r\n    console.log(watch(\"example\")); // watch input value by passing the name of it\r\n  \r\n    return (\r\n      /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* register your input into the hook by invoking the \"register\" function */}\r\n        <input defaultValue=\"test\" {...register(\"example\")} />\r\n        \r\n        {/* include validation with required or other standard HTML validation rules */}\r\n        <input {...register(\"exampleRequired\", { required: true })} />\r\n        {/* errors will return when field validation fails  */}\r\n        {errors.exampleRequired && <span>This field is required</span>}\r\n        \r\n        <input type=\"submit\" />\r\n      </form>\r\n    );\r\n  \r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,cAAP;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAChC,MAAM;IAAEC,QAAF;IAAYC,YAAZ;IAA0BC,KAA1B;IAAiCC,SAAS,EAAE;MAAEC;IAAF;EAA5C,IAA2DN,OAAO,EAAxE;;EACA,MAAMO,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzB;;EAEAC,OAAO,CAACC,GAAR,CAAYN,KAAK,CAAC,SAAD,CAAjB,EAJgC,CAID;;EAE/B;IAAA;;IACE;IACA;MAAM,QAAQ,EAAED,YAAY,CAACI,QAAD,CAA5B;MAAA,wBAEE;QAAO,YAAY,EAAC,MAApB;QAAA,GAA+BL,QAAQ,CAAC,SAAD;MAAvC;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE,sBAAWA,QAAQ,CAAC,iBAAD,EAAoB;UAAES,QAAQ,EAAE;QAAZ,CAApB;MAAnB;QAAA;QAAA;QAAA;MAAA,QALF,EAOGL,MAAM,CAACM,eAAP,iBAA0B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAP7B,eASE;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAeH;;GArBuBX,S;UAC6CD,O;;;KAD7CC,S"},"metadata":{},"sourceType":"module"}