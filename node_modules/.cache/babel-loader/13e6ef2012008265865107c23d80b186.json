{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Qss\\\\Desktop\\\\BEST\\\\Nowe\\\\Project\\\\app\\\\app\\\\src\\\\DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport \"./style.css\";\nimport Post from './records.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DataFetching() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [randomPost, setRandomPost] = useState(null);\n  useEffect(() => {\n    fetch('records.json').then(res => res.json()).then(data => {\n      setPosts(data.posts);\n      let random = randomIntFromInterval(0, data.posts.length);\n      setRandomPost(posts[random]);\n    });\n  }, []); // getting a random number between a range\n\n  function randomIntFromInterval(min, max) {\n    // min and max included \n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const randomId = Math.round(randomIntFromInterval(0, posts.length));\n        setRandomPost(posts[randomId]);\n      },\n      children: \"Get random post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), randomPost && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [randomPost.title, randomPost.body]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DataFetching, \"UcIsaxnHChtubIJ+hKsgAMVGJLE=\");\n\n_c = DataFetching;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataFetching\");","map":{"version":3,"names":["useState","useEffect","Post","DataFetching","posts","setPosts","randomPost","setRandomPost","fetch","then","res","json","data","random","randomIntFromInterval","length","min","max","Math","floor","randomId","round","title","body"],"sources":["C:/Users/Qss/Desktop/BEST/Nowe/Project/app/app/src/DataFetching.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport \"./style.css\";\r\nimport Post from './records.json';\r\n\r\nexport default function DataFetching() {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [randomPost, setRandomPost] = useState(null)\r\n\r\n    useEffect(() => {    \r\n      fetch('records.json')\r\n          .then(res => res.json())\r\n          .then(data => {setPosts(data.posts);\r\nlet random= randomIntFromInterval(0,data.posts.length);\r\n  setRandomPost(posts[random])\r\n          });\r\n  }, []);\r\n  // getting a random number between a range\r\nfunction randomIntFromInterval(min, max) { // min and max included \r\n  return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\n    return (\r\n    <div className=\"post\">\r\n        \r\n        <button\r\n          onClick={() => {\r\n           const randomId = Math.round(randomIntFromInterval(0,posts.length))\r\n            setRandomPost(posts[randomId])\r\n          }}\r\n        >\r\n          \r\n          Get random post\r\n        </button>\r\n        {randomPost && (\r\n          <>\r\n            {randomPost.title}\r\n            {randomPost.body}\r\n          </>\r\n        )}\r\n        {/* {Post?.map(post => (\r\n        <ul>\r\n            <li key={post.id}>\r\n                <h3>{post.title}</h3>\r\n                <p>{post.body}</p>\r\n            </li>\r\n        </ul>\r\n        ))} */}\r\n        \r\n    </div>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;;AAEA,eAAe,SAASC,YAAT,GAAwB;EAAA;;EAEnC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;EAEAC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,cAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;MAACP,QAAQ,CAACO,IAAI,CAACR,KAAN,CAAR;MACzB,IAAIS,MAAM,GAAEC,qBAAqB,CAAC,CAAD,EAAGF,IAAI,CAACR,KAAL,CAAWW,MAAd,CAAjC;MACER,aAAa,CAACH,KAAK,CAACS,MAAD,CAAN,CAAb;IACS,CALL;EAMH,CAPU,EAOR,EAPQ,CAAT,CALmC,CAarC;;EACF,SAASC,qBAAT,CAA+BE,GAA/B,EAAoCC,GAApC,EAAyC;IAAE;IACzC,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACL,MAAL,MAAiBI,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;EACD;;EAEG,oBACA;IAAK,SAAS,EAAC,MAAf;IAAA,wBAEI;MACE,OAAO,EAAE,MAAM;QACd,MAAMI,QAAQ,GAAGF,IAAI,CAACG,KAAL,CAAWP,qBAAqB,CAAC,CAAD,EAAGV,KAAK,CAACW,MAAT,CAAhC,CAAjB;QACCR,aAAa,CAACH,KAAK,CAACgB,QAAD,CAAN,CAAb;MACD,CAJH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAWKd,UAAU,iBACT;MAAA,WACGA,UAAU,CAACgB,KADd,EAEGhB,UAAU,CAACiB,IAFd;IAAA,gBAZN;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AA6BH;;GA/CuBpB,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}